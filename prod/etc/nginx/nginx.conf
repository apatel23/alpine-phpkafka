worker_processes  4;
error_log /dev/stderr warn;
pid /run/nginx.pid;

include /etc/nginx/modules/*.conf;

events {
    worker_connections  1024;
    use epoll;        # guarantee nginx is using epoll
    accept_mutex off; # EPOLLEXCLUSIVE + reuseport removes the need for this mutex
    multi_accept on;  # workers can drain the accept queue for better performance
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Standard Nginx access log format. Not used here, but made available for
    # downstream images, should they absolutely need standard log format.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
        '"$http_x_forwarded_for"';

    # JSON access logs, geared for Graylog consumption (more robust, as it helps
    # avoid Graylog throwing away data due to space inconsistencies).
    log_format  json_combined escape=json  '{"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user","time_local":"$time_local",'
        '"request":"$request","status":"$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for"}';

    access_log  /dev/stdout  json_combined;

    sendfile        on;

    keepalive_timeout  65;

    include /etc/nginx/conf.d/*.conf;
}
